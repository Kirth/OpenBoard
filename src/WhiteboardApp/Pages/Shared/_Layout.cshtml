@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Microsoft.AspNetCore.Components.Web
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>OpenBoard</title>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
    <base href="~/" />
    <link href="css/app.css" rel="stylesheet" />
    <style>
        /* Bootstrap reset - ensure our design system takes precedence */
        .container { width: min(1100px, 92%) !important; margin-inline: auto !important; }
        body { font-family: Inter, ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif !important; }
        .btn { all: unset; cursor: pointer; }
    </style>
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui" style="display: none;">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">ðŸ—™</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="https://unpkg.com/@@microsoft/signalr@@8.0.0/dist/browser/signalr.js"></script>
    <script>
        // Expose signalR to modules
        window.signalR = signalR;
        
        // Blazor error UI management
        // Wait for Blazor to be ready (it starts automatically in Blazor Server)
        function setupBlazorErrorUI() {
            const errorUI = document.getElementById('blazor-error-ui');
            if (errorUI) {
                // Add dismiss functionality
                const dismissBtn = errorUI.querySelector('.dismiss');
                if (dismissBtn) {
                    dismissBtn.addEventListener('click', function() {
                        errorUI.style.display = 'none';
                    });
                }
                
                // Override the default error handler to show our styled UI
                window.addEventListener('error', function(e) {
                    // Only show error UI for actual unhandled errors
                    if (e.error && !e.error.handled) {
                        errorUI.style.display = 'flex';
                    }
                });
            }
        }

        // Set up error UI when DOM is ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', setupBlazorErrorUI);
        } else {
            setupBlazorErrorUI();
        }
    </script>
    <!-- Pre-load jsPDF library -->
    <script src="https://unpkg.com/jspdf@2.5.1/dist/jspdf.umd.min.js"></script>
    <!-- Theme management -->
    <script src="~/js/theme.js"></script>
    <!-- Export functions must be loaded before Blazor interop -->
    <script src="~/js/export-functions.js"></script>
    <script type="module" src="~/js/main.js"></script>
</body>
</html>
